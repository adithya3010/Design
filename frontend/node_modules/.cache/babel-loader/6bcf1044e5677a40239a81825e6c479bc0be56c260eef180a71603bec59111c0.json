{"ast":null,"code":"import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n    h = extent[1][1] - extent[0][1],\n    clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  var b = boundsStream.result(),\n    k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n    x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n    y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n  if (clip != null) projection.clipExtent(clip);\n  return projection.scale(k * 150).translate([x, y]);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}","map":{"version":3,"names":["default","geoStream","boundsStream","fitExtent","projection","extent","object","w","h","clip","clipExtent","scale","translate","stream","b","result","k","Math","min","x","y","fitSize","size"],"sources":["C:/my git/Design/frontend/node_modules/d3-geo/src/projection/fit.js"],"sourcesContent":["import {default as geoStream} from \"../stream\";\r\nimport boundsStream from \"../path/bounds\";\r\n\r\nexport function fitExtent(projection, extent, object) {\r\n  var w = extent[1][0] - extent[0][0],\r\n      h = extent[1][1] - extent[0][1],\r\n      clip = projection.clipExtent && projection.clipExtent();\r\n\r\n  projection\r\n      .scale(150)\r\n      .translate([0, 0]);\r\n\r\n  if (clip != null) projection.clipExtent(null);\r\n\r\n  geoStream(object, projection.stream(boundsStream));\r\n\r\n  var b = boundsStream.result(),\r\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\r\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\r\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\r\n\r\n  if (clip != null) projection.clipExtent(clip);\r\n\r\n  return projection\r\n      .scale(k * 150)\r\n      .translate([x, y]);\r\n}\r\n\r\nexport function fitSize(projection, size, object) {\r\n  return fitExtent(projection, [[0, 0], size], object);\r\n}\r\n"],"mappings":"AAAA,SAAQA,OAAO,IAAIC,SAAS,QAAO,WAAW;AAC9C,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,OAAO,SAASC,SAASA,CAACC,UAAU,EAAEC,MAAM,EAAEC,MAAM,EAAE;EACpD,IAAIC,CAAC,GAAGF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/BG,CAAC,GAAGH,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/BI,IAAI,GAAGL,UAAU,CAACM,UAAU,IAAIN,UAAU,CAACM,UAAU,CAAC,CAAC;EAE3DN,UAAU,CACLO,KAAK,CAAC,GAAG,CAAC,CACVC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAEtB,IAAIH,IAAI,IAAI,IAAI,EAAEL,UAAU,CAACM,UAAU,CAAC,IAAI,CAAC;EAE7CT,SAAS,CAACK,MAAM,EAAEF,UAAU,CAACS,MAAM,CAACX,YAAY,CAAC,CAAC;EAElD,IAAIY,CAAC,GAAGZ,YAAY,CAACa,MAAM,CAAC,CAAC;IACzBC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACX,CAAC,IAAIO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEN,CAAC,IAAIM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9DK,CAAC,GAAG,CAACd,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAACE,CAAC,GAAGS,CAAC,IAAIF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACrDM,CAAC,GAAG,CAACf,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAACG,CAAC,GAAGQ,CAAC,IAAIF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;EAEzD,IAAIL,IAAI,IAAI,IAAI,EAAEL,UAAU,CAACM,UAAU,CAACD,IAAI,CAAC;EAE7C,OAAOL,UAAU,CACZO,KAAK,CAACK,CAAC,GAAG,GAAG,CAAC,CACdJ,SAAS,CAAC,CAACO,CAAC,EAAEC,CAAC,CAAC,CAAC;AACxB;AAEA,OAAO,SAASC,OAAOA,CAACjB,UAAU,EAAEkB,IAAI,EAAEhB,MAAM,EAAE;EAChD,OAAOH,SAAS,CAACC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEkB,IAAI,CAAC,EAAEhB,MAAM,CAAC;AACtD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}