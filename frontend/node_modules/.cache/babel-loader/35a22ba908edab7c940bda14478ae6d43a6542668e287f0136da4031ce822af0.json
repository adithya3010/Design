{"ast":null,"code":"function RedBlackTree() {\n  this._ = null; // root node\n}\nexport function RedBlackNode(node) {\n  node.U =\n  // parent node\n  node.C =\n  // color - true for red, false for black\n  node.L =\n  // left node\n  node.R =\n  // right node\n  node.P =\n  // previous node\n  node.N = null; // next node\n}\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n  insert: function (after, node) {\n    var parent, grandpa, uncle;\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n  remove: function (node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n    var parent = node.U,\n      sibling,\n      left = node.L,\n      right = node.R,\n      next,\n      red;\n    if (!left) next = right;else if (!right) next = left;else next = RedBlackFirst(right);\n    if (parent) {\n      if (parent.L === node) parent.L = next;else parent.R = next;\n    } else {\n      this._ = next;\n    }\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) {\n      node.C = false;\n      return;\n    }\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n    if (node) node.C = false;\n  }\n};\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n    q = node.R,\n    parent = p.U;\n  if (parent) {\n    if (parent.L === p) parent.L = q;else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n    q = node.L,\n    parent = p.U;\n  if (parent) {\n    if (parent.L === p) parent.L = q;else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\nexport default RedBlackTree;","map":{"version":3,"names":["RedBlackTree","_","RedBlackNode","node","U","C","L","R","P","N","prototype","constructor","insert","after","parent","grandpa","uncle","RedBlackFirst","RedBlackRotateLeft","RedBlackRotateRight","remove","sibling","left","right","next","red","tree","p","q"],"sources":["C:/my git/Design/frontend/node_modules/d3-voronoi/src/RedBlackTree.js"],"sourcesContent":["function RedBlackTree() {\r\n  this._ = null; // root node\r\n}\r\n\r\nexport function RedBlackNode(node) {\r\n  node.U = // parent node\r\n  node.C = // color - true for red, false for black\r\n  node.L = // left node\r\n  node.R = // right node\r\n  node.P = // previous node\r\n  node.N = null; // next node\r\n}\r\n\r\nRedBlackTree.prototype = {\r\n  constructor: RedBlackTree,\r\n\r\n  insert: function(after, node) {\r\n    var parent, grandpa, uncle;\r\n\r\n    if (after) {\r\n      node.P = after;\r\n      node.N = after.N;\r\n      if (after.N) after.N.P = node;\r\n      after.N = node;\r\n      if (after.R) {\r\n        after = after.R;\r\n        while (after.L) after = after.L;\r\n        after.L = node;\r\n      } else {\r\n        after.R = node;\r\n      }\r\n      parent = after;\r\n    } else if (this._) {\r\n      after = RedBlackFirst(this._);\r\n      node.P = null;\r\n      node.N = after;\r\n      after.P = after.L = node;\r\n      parent = after;\r\n    } else {\r\n      node.P = node.N = null;\r\n      this._ = node;\r\n      parent = null;\r\n    }\r\n    node.L = node.R = null;\r\n    node.U = parent;\r\n    node.C = true;\r\n\r\n    after = node;\r\n    while (parent && parent.C) {\r\n      grandpa = parent.U;\r\n      if (parent === grandpa.L) {\r\n        uncle = grandpa.R;\r\n        if (uncle && uncle.C) {\r\n          parent.C = uncle.C = false;\r\n          grandpa.C = true;\r\n          after = grandpa;\r\n        } else {\r\n          if (after === parent.R) {\r\n            RedBlackRotateLeft(this, parent);\r\n            after = parent;\r\n            parent = after.U;\r\n          }\r\n          parent.C = false;\r\n          grandpa.C = true;\r\n          RedBlackRotateRight(this, grandpa);\r\n        }\r\n      } else {\r\n        uncle = grandpa.L;\r\n        if (uncle && uncle.C) {\r\n          parent.C = uncle.C = false;\r\n          grandpa.C = true;\r\n          after = grandpa;\r\n        } else {\r\n          if (after === parent.L) {\r\n            RedBlackRotateRight(this, parent);\r\n            after = parent;\r\n            parent = after.U;\r\n          }\r\n          parent.C = false;\r\n          grandpa.C = true;\r\n          RedBlackRotateLeft(this, grandpa);\r\n        }\r\n      }\r\n      parent = after.U;\r\n    }\r\n    this._.C = false;\r\n  },\r\n\r\n  remove: function(node) {\r\n    if (node.N) node.N.P = node.P;\r\n    if (node.P) node.P.N = node.N;\r\n    node.N = node.P = null;\r\n\r\n    var parent = node.U,\r\n        sibling,\r\n        left = node.L,\r\n        right = node.R,\r\n        next,\r\n        red;\r\n\r\n    if (!left) next = right;\r\n    else if (!right) next = left;\r\n    else next = RedBlackFirst(right);\r\n\r\n    if (parent) {\r\n      if (parent.L === node) parent.L = next;\r\n      else parent.R = next;\r\n    } else {\r\n      this._ = next;\r\n    }\r\n\r\n    if (left && right) {\r\n      red = next.C;\r\n      next.C = node.C;\r\n      next.L = left;\r\n      left.U = next;\r\n      if (next !== right) {\r\n        parent = next.U;\r\n        next.U = node.U;\r\n        node = next.R;\r\n        parent.L = node;\r\n        next.R = right;\r\n        right.U = next;\r\n      } else {\r\n        next.U = parent;\r\n        parent = next;\r\n        node = next.R;\r\n      }\r\n    } else {\r\n      red = node.C;\r\n      node = next;\r\n    }\r\n\r\n    if (node) node.U = parent;\r\n    if (red) return;\r\n    if (node && node.C) { node.C = false; return; }\r\n\r\n    do {\r\n      if (node === this._) break;\r\n      if (node === parent.L) {\r\n        sibling = parent.R;\r\n        if (sibling.C) {\r\n          sibling.C = false;\r\n          parent.C = true;\r\n          RedBlackRotateLeft(this, parent);\r\n          sibling = parent.R;\r\n        }\r\n        if ((sibling.L && sibling.L.C)\r\n            || (sibling.R && sibling.R.C)) {\r\n          if (!sibling.R || !sibling.R.C) {\r\n            sibling.L.C = false;\r\n            sibling.C = true;\r\n            RedBlackRotateRight(this, sibling);\r\n            sibling = parent.R;\r\n          }\r\n          sibling.C = parent.C;\r\n          parent.C = sibling.R.C = false;\r\n          RedBlackRotateLeft(this, parent);\r\n          node = this._;\r\n          break;\r\n        }\r\n      } else {\r\n        sibling = parent.L;\r\n        if (sibling.C) {\r\n          sibling.C = false;\r\n          parent.C = true;\r\n          RedBlackRotateRight(this, parent);\r\n          sibling = parent.L;\r\n        }\r\n        if ((sibling.L && sibling.L.C)\r\n          || (sibling.R && sibling.R.C)) {\r\n          if (!sibling.L || !sibling.L.C) {\r\n            sibling.R.C = false;\r\n            sibling.C = true;\r\n            RedBlackRotateLeft(this, sibling);\r\n            sibling = parent.L;\r\n          }\r\n          sibling.C = parent.C;\r\n          parent.C = sibling.L.C = false;\r\n          RedBlackRotateRight(this, parent);\r\n          node = this._;\r\n          break;\r\n        }\r\n      }\r\n      sibling.C = true;\r\n      node = parent;\r\n      parent = parent.U;\r\n    } while (!node.C);\r\n\r\n    if (node) node.C = false;\r\n  }\r\n};\r\n\r\nfunction RedBlackRotateLeft(tree, node) {\r\n  var p = node,\r\n      q = node.R,\r\n      parent = p.U;\r\n\r\n  if (parent) {\r\n    if (parent.L === p) parent.L = q;\r\n    else parent.R = q;\r\n  } else {\r\n    tree._ = q;\r\n  }\r\n\r\n  q.U = parent;\r\n  p.U = q;\r\n  p.R = q.L;\r\n  if (p.R) p.R.U = p;\r\n  q.L = p;\r\n}\r\n\r\nfunction RedBlackRotateRight(tree, node) {\r\n  var p = node,\r\n      q = node.L,\r\n      parent = p.U;\r\n\r\n  if (parent) {\r\n    if (parent.L === p) parent.L = q;\r\n    else parent.R = q;\r\n  } else {\r\n    tree._ = q;\r\n  }\r\n\r\n  q.U = parent;\r\n  p.U = q;\r\n  p.L = q.R;\r\n  if (p.L) p.L.U = p;\r\n  q.R = p;\r\n}\r\n\r\nfunction RedBlackFirst(node) {\r\n  while (node.L) node = node.L;\r\n  return node;\r\n}\r\n\r\nexport default RedBlackTree;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}