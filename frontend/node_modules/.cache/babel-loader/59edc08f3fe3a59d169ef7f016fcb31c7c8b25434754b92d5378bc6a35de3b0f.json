{"ast":null,"code":"var _jsxFileName = \"C:\\\\my git\\\\Design\\\\frontend\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport L from 'leaflet';\nimport * as turf from '@turf/turf';\nimport polyline from '@mapbox/polyline';\n\n// Icons setup...\n// (unchanged from your original code)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [locations, setLocations] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n  const [sortedLocations, setSortedLocations] = useState([]);\n  const [showList, setShowList] = useState(false);\n  const [start, setStart] = useState(null);\n  const [end, setEnd] = useState(null);\n  const [routePoints, setRoutePoints] = useState([]);\n  const [chargingStops, setChargingStops] = useState([]);\n  const [showSidebar, setShowSidebar] = useState(false);\n  const getDistance = (lat1, lon1, lat2, lon2) => {\n    // same as before...\n  };\n  useEffect(() => {\n    // Fetch locations\n    axios.get('http://localhost:5000/api/locations').then(res => setLocations(res.data)).catch(err => console.error('Error loading locations', err));\n\n    // Geolocation + Autocomplete initialization\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setUserLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    // Setup Google autocomplete after rendering inputs\n    const initAutocomplete = (id, setter) => {\n      var _window$google, _window$google$maps;\n      if ((_window$google = window.google) !== null && _window$google !== void 0 && (_window$google$maps = _window$google.maps) !== null && _window$google$maps !== void 0 && _window$google$maps.places) {\n        const input = document.getElementById(id);\n        if (!input) return;\n        const autocomplete = new window.google.maps.places.Autocomplete(input);\n        autocomplete.addListener('place_changed', () => {\n          const place = autocomplete.getPlace();\n          if (place.geometry) {\n            setter({\n              lat: place.geometry.location.lat(),\n              lng: place.geometry.location.lng(),\n              name: place.formatted_address\n            });\n          }\n        });\n      }\n    };\n    initAutocomplete('start', setStart);\n    initAutocomplete('end', setEnd);\n  }, [start, end]);\n  const handleRoute = async () => {\n    if (!start || !end) return;\n    const battery = parseInt(prompt(\"Enter your current battery percentage:\"), 10);\n    const efficiency = parseFloat(prompt(\"Enter your vehicle's km per 1% charge:\"));\n    if (isNaN(battery) || isNaN(efficiency) || battery <= 0 || battery > 100 || efficiency <= 0) {\n      alert(\"Please enter valid battery percentage and efficiency.\");\n      return;\n    }\n    try {\n      const res = await axios.get('http://localhost:5000/api/locations/get-route', {\n        params: {\n          origin: `${start.lat},${start.lng}`,\n          destination: `${end.lat},${end.lng}`\n        }\n      });\n      const encoded = res.data.encoded;\n      const path = polyline.decode(encoded).map(([lat, lng]) => ({\n        lat,\n        lng\n      }));\n      setRoutePoints(path);\n\n      // Compute intermediate stops for charging\n      let currentBattery = battery;\n      let cumulativeDistance = 0;\n      const stops = [];\n      path.reduce((prev, curr) => {\n        const segment = getDistance(prev.lat, prev.lng, curr.lat, curr.lng);\n        cumulativeDistance += segment;\n        if (cumulativeDistance > currentBattery * efficiency) {\n          // find nearby stations\n          const nearby = locations.filter(loc => {\n            const dist = turf.distance(turf.point([curr.lng, curr.lat]), turf.point([loc.longitude, loc.latitude]), {\n              units: 'kilometers'\n            });\n            return dist <= 5;\n          });\n          if (nearby.length > 0) {\n            const nearest = nearby.reduce((a, b) => {\n              return getDistance(curr.lat, curr.lng, a.latitude, a.longitude) < getDistance(curr.lat, curr.lng, b.latitude, b.longitude) ? a : b;\n            });\n            stops.push(nearest);\n            cumulativeDistance = 0;\n            currentBattery = 100;\n          }\n        }\n        return curr;\n      }, path[0]);\n      setChargingStops(stops);\n      setShowSidebar(true);\n    } catch (err) {\n      console.error(\"Error fetching route:\", err);\n      alert('Failed to plan route. Please try again.');\n    }\n  };\n  const getSoonestETA = chargers => {/* unchanged */};\n\n  // Render markup\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find Your Charging Station\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"start\",\n      placeholder: \"Start Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"end\",\n      placeholder: \"End Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRoute,\n      children: \"Plan Trip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: findNearest,\n      style: {\n        marginTop: 10\n      },\n      children: \"Find Nearest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), showSidebar && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {/* styling unchanged */},\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Stations Along Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chargingStops.map((loc, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [idx + 1, \". \", loc.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 55\n          }, this), loc.sourceType, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/location/${loc._id}`,\n            target: \"_blank\",\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this)]\n        }, loc._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowSidebar(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), showList && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {/* styling unchanged */},\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Nearest Charging Stations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sortedLocations.slice(0, 10).map((loc, index) => {\n          var _loc$chargerStatus;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [index + 1, \". \", loc.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 57\n            }, this), \"Distance: \", loc.actualDistance.toFixed(2), \" km\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 61\n            }, this), ((_loc$chargerStatus = loc.chargerStatus) === null || _loc$chargerStatus === void 0 ? void 0 : _loc$chargerStatus.available) === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/location/${loc._id}`,\n              target: \"_blank\",\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, loc._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowList(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MapComponent, \"hIUWxtBeBbCaUulB7+S2gMSWGds=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","Polyline","axios","Link","L","turf","polyline","jsxDEV","_jsxDEV","Fragment","_Fragment","MapComponent","_s","locations","setLocations","userLocation","setUserLocation","sortedLocations","setSortedLocations","showList","setShowList","start","setStart","end","setEnd","routePoints","setRoutePoints","chargingStops","setChargingStops","showSidebar","setShowSidebar","getDistance","lat1","lon1","lat2","lon2","get","then","res","data","catch","err","console","error","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","initAutocomplete","id","setter","_window$google","_window$google$maps","window","google","maps","places","input","document","getElementById","autocomplete","Autocomplete","addListener","place","getPlace","geometry","location","name","formatted_address","handleRoute","battery","parseInt","prompt","efficiency","parseFloat","isNaN","alert","params","origin","destination","encoded","path","decode","map","currentBattery","cumulativeDistance","stops","reduce","prev","curr","segment","nearby","filter","loc","dist","distance","point","units","length","nearest","a","b","push","getSoonestETA","chargers","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","findNearest","style","marginTop","display","idx","sourceType","to","_id","target","slice","index","_loc$chargerStatus","actualDistance","toFixed","chargerStatus","available","color","_c","$RefreshReg$"],"sources":["C:/my git/Design/frontend/src/components/MapComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport L from 'leaflet';\r\nimport * as turf from '@turf/turf';\r\nimport polyline from '@mapbox/polyline';\r\n\r\n// Icons setup...\r\n// (unchanged from your original code)\r\n\r\nconst MapComponent = () => {\r\n  const [locations, setLocations] = useState([]);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [sortedLocations, setSortedLocations] = useState([]);\r\n  const [showList, setShowList] = useState(false);\r\n  const [start, setStart] = useState(null);\r\n  const [end, setEnd] = useState(null);\r\n  const [routePoints, setRoutePoints] = useState([]);\r\n  const [chargingStops, setChargingStops] = useState([]);\r\n  const [showSidebar, setShowSidebar] = useState(false);\r\n\r\n  const getDistance = (lat1, lon1, lat2, lon2) => {\r\n    // same as before...\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch locations\r\n    axios.get('http://localhost:5000/api/locations')\r\n      .then(res => setLocations(res.data))\r\n      .catch(err => console.error('Error loading locations', err));\r\n\r\n    // Geolocation + Autocomplete initialization\r\n    if ('geolocation' in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        setUserLocation({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        });\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Setup Google autocomplete after rendering inputs\r\n    const initAutocomplete = (id, setter) => {\r\n      if (window.google?.maps?.places) {\r\n        const input = document.getElementById(id);\r\n        if (!input) return;\r\n        const autocomplete = new window.google.maps.places.Autocomplete(input);\r\n        autocomplete.addListener('place_changed', () => {\r\n          const place = autocomplete.getPlace();\r\n          if (place.geometry) {\r\n            setter({\r\n              lat: place.geometry.location.lat(),\r\n              lng: place.geometry.location.lng(),\r\n              name: place.formatted_address\r\n            });\r\n          }\r\n        });\r\n      }\r\n    };\r\n    initAutocomplete('start', setStart);\r\n    initAutocomplete('end', setEnd);\r\n  }, [start, end]);\r\n\r\n  const handleRoute = async () => {\r\n    if (!start || !end) return;\r\n\r\n    const battery = parseInt(prompt(\"Enter your current battery percentage:\"), 10);\r\n    const efficiency = parseFloat(prompt(\"Enter your vehicle's km per 1% charge:\"));\r\n\r\n    if (isNaN(battery) || isNaN(efficiency) || battery <= 0 || battery > 100 || efficiency <= 0) {\r\n      alert(\"Please enter valid battery percentage and efficiency.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/locations/get-route', {\r\n        params: { origin: `${start.lat},${start.lng}`, destination: `${end.lat},${end.lng}` }\r\n      });\r\n      const encoded = res.data.encoded;\r\n      const path = polyline.decode(encoded).map(([lat, lng]) => ({ lat, lng }));\r\n      setRoutePoints(path);\r\n\r\n      // Compute intermediate stops for charging\r\n      let currentBattery = battery;\r\n      let cumulativeDistance = 0;\r\n      const stops = [];\r\n\r\n      path.reduce((prev, curr) => {\r\n        const segment = getDistance(prev.lat, prev.lng, curr.lat, curr.lng);\r\n        cumulativeDistance += segment;\r\n\r\n        if (cumulativeDistance > currentBattery * efficiency) {\r\n          // find nearby stations\r\n          const nearby = locations.filter(loc => {\r\n            const dist = turf.distance(\r\n              turf.point([curr.lng, curr.lat]),\r\n              turf.point([loc.longitude, loc.latitude]),\r\n              { units: 'kilometers' }\r\n            );\r\n            return dist <= 5;\r\n          });\r\n\r\n          if (nearby.length > 0) {\r\n            const nearest = nearby.reduce((a, b) => {\r\n              return (\r\n                getDistance(curr.lat, curr.lng, a.latitude, a.longitude) <\r\n                getDistance(curr.lat, curr.lng, b.latitude, b.longitude)\r\n              ) ? a : b;\r\n            });\r\n            stops.push(nearest);\r\n            cumulativeDistance = 0;\r\n            currentBattery = 100;\r\n          }\r\n        }\r\n        return curr;\r\n      }, path[0]);\r\n\r\n      setChargingStops(stops);\r\n      setShowSidebar(true);\r\n    } catch (err) {\r\n      console.error(\"Error fetching route:\", err);\r\n      alert('Failed to plan route. Please try again.');\r\n    }\r\n  };\r\n\r\n  const getSoonestETA = (chargers) => { /* unchanged */ };\r\n\r\n  // Render markup\r\n  return (\r\n    <>\r\n      <h2>Find Your Charging Station</h2>\r\n      <input id=\"start\" placeholder=\"Start Location\" />\r\n      <input id=\"end\" placeholder=\"End Location\" />\r\n      <button onClick={handleRoute}>Plan Trip</button>\r\n      <br />\r\n      <button onClick={findNearest} style={{ marginTop: 10 }}>Find Nearest</button>\r\n\r\n      <div style={{ display: 'flex' }}>\r\n        {/* MapContainer and markers unchanged */}\r\n      </div>\r\n\r\n      {/* Sidebar for stops */}\r\n      {showSidebar && (\r\n        <div style={{ /* styling unchanged */ }}>\r\n          <h4>Stations Along Route</h4>\r\n          <ul>\r\n            {chargingStops.map((loc, idx) => (\r\n              <li key={loc._id}>\r\n                <strong>{idx + 1}. {loc.name}</strong><br/>\r\n                {loc.sourceType}<br/>\r\n                <Link to={`/location/${loc._id}`} target=\"_blank\">Details</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button onClick={() => setShowSidebar(false)}>Close</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Popup list for nearest */}\r\n      {showList && (\r\n        <div style={{ /* styling unchanged */ }}>\r\n          <h3>Nearest Charging Stations</h3>\r\n          <ul>\r\n            {sortedLocations.slice(0, 10).map((loc, index) => (\r\n              <li key={loc._id}>\r\n                <strong>{index + 1}. {loc.name}</strong><br/>\r\n                Distance: {loc.actualDistance.toFixed(2)} km<br/>\r\n                {loc.chargerStatus?.available === 0 && (\r\n                  <span style={{ color: 'red' }}>\r\n                    {/* Your inline ETA logic unchanged */}\r\n                  </span>\r\n                )}\r\n                <br/>\r\n                <Link to={`/location/${loc._id}`} target=\"_blank\">Details</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button onClick={() => setShowList(false)}>Close</button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}